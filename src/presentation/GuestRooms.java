package presentation;

import domain.Controller;
import domain.Customer;
import java.sql.Date;
import java.util.Calendar;
import java.util.Map;
import javax.swing.table.DefaultTableModel;

public class GuestRooms extends javax.swing.JFrame {

    private Controller instance = Controller.getInstance();
    private LandingPage landingPage;
    private DefaultTableModel model;

    public GuestRooms() {
        initComponents();
        model = (DefaultTableModel) jTableGuests.getModel();
        refreshList();

    }

    public GuestRooms(LandingPage landingPage) {
        initComponents();
        model = (DefaultTableModel) jTableGuests.getModel();
        refreshList();
        this.landingPage = landingPage;
    }

    private void refreshList() {
        Map<Customer, Integer> customers = instance.getAllCurrentGuests();
        Calendar rightNow = Calendar.getInstance();
        Calendar midday = (Calendar) rightNow.clone();
        Date today = new Date(rightNow.getTimeInMillis());
        today = Date.valueOf(today.toString());
        midday.setTimeInMillis(today.getTime());
        midday.set(Calendar.HOUR_OF_DAY, 12);

        for (Map.Entry<Customer, Integer> entry : customers.entrySet()) {
            if (rightNow.after(midday) && entry.getValue() == 3) {
                continue;
            }
            Object[] ob = new Object[9];
            Customer c = entry.getKey();
            Integer status = entry.getValue();
            ob[0] = c.getID();
            ob[1] = c.getFirst_name();
            ob[2] = c.getLast_name();
            ob[3] = c.getCountry();
            ob[4] = c.getAddres();
            ob[5] = c.getPhone();
            ob[6] = c.getTravel_agency();
            ob[7] = c.getEmail();
            if (status == 1) {
                ob[8] = "Checked in";
            } else if (status == 2) {
                ob[8] = "Arriving today";
            } else {
                ob[8] = "Leaving today";
            }
            model.addRow(ob);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelGuests = new javax.swing.JLabel();
        jButtonBackToMenu = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableGuests = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabelGuests.setText("Current Guests are : ");

        jButtonBackToMenu.setText("Back to Menu");
        jButtonBackToMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackToMenuActionPerformed(evt);
            }
        });

        jTableGuests.setAutoCreateRowSorter(true);
        jTableGuests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "First Name", "Last Name", "Country", "Address", "Phone", "Travel Agency", "Email", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableGuests.setColumnSelectionAllowed(false);
        jScrollPane1.setViewportView(jTableGuests);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonBackToMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelGuests)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 818, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelGuests, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 31, Short.MAX_VALUE)
                .addComponent(jButtonBackToMenu))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBackToMenuActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonBackToMenuActionPerformed
    {//GEN-HEADEREND:event_jButtonBackToMenuActionPerformed
        landingPage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonBackToMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GuestRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GuestRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GuestRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GuestRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuestRooms().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonBackToMenu;
    private javax.swing.JLabel jLabelGuests;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableGuests;
    // End of variables declaration//GEN-END:variables
}
